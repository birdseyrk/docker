---

- hosts: all
  gather_facts: true

  # Register the Ansible Variables
  vars:
    debug: false
    sendRequest: true
    lastUpdate: "{{ansible_date_time.date}}:{{ansible_date_time.time}}"
    epoch: "{{ansible_date_time.epoch}}"


  # defines the Ansible tasks

  tasks:

  - name: This task will fail
    command: /bin/false
    ignore_unreachable: true
    register: command_result

  - name: This task will start only if host is unreachable
    command: /bin/true
    when: command_result.stdout is undefined


  # Print the hostname
  - name: Print The hostname command undefined
    ansible.builtin.debug:
      var: inventory_hostname
    when: command_result.stdout is undefined

  # Print the hostname
  - name: Print The hostname when ansible-master
    ansible.builtin.debug:
      var: inventory_hostname
    when: inventory_hostname == "ansible-master"


  # Cut the Uptime from the results
  - name: Check uptime prior reboot
    shell: cut -d ' ' -f1 /proc/uptime
    register: uptimeoutput

  # Print the serverstatus
  - name: Print The serverstatus
    ansible.builtin.debug:
      var: serverstatus
    when: debug

  # Print the uptime
  - name: Print The uptime
    ansible.builtin.debug:
      var: uptimeoutput.stdout_lines[0]
    when: debug

  # Print the current date
  - name: Print the current date
    ansible.builtin.debug:
      #var: ansible_date_time.date
      var: lastUpdate
    when: debug

  # Initialize the hostname
  - name: Initialize the hostname data object
    ansible.builtin.set_fact:
      serverstatus: {"hostname":"{{ inventory_hostname }}","uptime":"{{uptimeoutput.stdout_lines[0] }}","lastupdate":"{{lastUpdate}}","epoch":"{{epoch}}" }

  # Print the serverstatus
  - name: Print the serverstatus
    ansible.builtin.debug:
      var: serverstatus
    when: debug

# nodeport - "http://nginx.ingress.192.168.1.100.nip.io:30850/uptime"
  # ingress - "http://nginx.ingress.192.168.1.100.nip.io:8085/uptime"

  - block:
    - name: POST from contents of local file
      ansible.builtin.uri:
        url: "http://nginx.ingress.192.168.1.100.nip.io:30850/uptime"
        method: POST
        return_content: yes
        body_format: "json"
        body: "{{ serverstatus }}"
        status_code: 201
      when: sendRequest

    rescue:

      # Print the hostname
      - name: Print The hostname
        ansible.builtin.debug:
          var: inventory_hostname
        #when: debug

      - name: Send service ssh restart
        shell: service ssh restart
        register: sshrestart
 

      
